{"version":3,"file":"iagora.min.js","sources":["../src/iagora.js"],"sourcesContent":["import * as WebChat from \"block_iagora/botframework-webchat\";\n\n/**\n * Initializes the chat with given parameters.\n * @param {Object} params - The initialization parameters.\n * @param {string} params.copilotUrl - The copilot.\n * @param {string} params.chatId - The chat container ID.\n */\nexport const init = ({copilotUrl, chatId}) => {\n  // eslint-disable-next-line no-console\n  console.log('Copilot URL:', copilotUrl);\n  // eslint-disable-next-line no-console\n  console.log('Chat ID:', chatId);\n  initIagoraChat(copilotUrl, chatId);\n};\n\n\n/**\n * @param {string} copilotUrl\n * @param {string} chatId\n */\nexport async function initIagoraChat(copilotUrl, chatId) {\n  try {\n    const tokenEndpointURL = new URL(copilotUrl);\n    const locale = document.documentElement.lang || 'en';\n    const apiVersion = tokenEndpointURL.searchParams.get('api-version');\n    const [directLineURL, token] = await Promise.all([\n      fetch(new URL(`/powervirtualagents/regionalchannelsettings?api-version=${apiVersion}`, tokenEndpointURL))\n        .then(response => {\n          if (!response.ok) {\n            throw new Error('Failed to retrieve regional channel settings.');\n          }\n\n          return response.json();\n        })\n        .then(({ channelUrlsById: { directline } }) => directline),\n      fetch(tokenEndpointURL)\n        .then(response => {\n          if (!response.ok) {\n            throw new Error('Failed to retrieve Direct Line token.');\n          }\n\n          return response.json();\n        })\n        .then(({ token }) => token)\n    ]);\n\n    // eslint-disable-next-line no-console\n    console.log('WebChat', WebChat);\n\n\n    const directLine = WebChat.createDirectLine({ domain: new URL('v3/directline', directLineURL), token });\n    const subscription = directLine.connectionStatus$.subscribe({\n      next(value) {\n        if (value === 2) {\n          directLine\n            .postActivity({\n                localTimezone: Intl.DateTimeFormat().resolvedOptions().timeZone,\n                locale,\n                name: \"startConversation\",\n                type: \"event\"\n            })\n            .subscribe();\n  \n          subscription.unsubscribe();\n        }\n      }\n    });\n  \n    const chatContainer = document.getElementById(chatId);\n    WebChat.renderWebChat(\n      {directLine, locale: document.documentElement.lang || \"en\"},\n      chatContainer\n    );\n  } catch (error) {\n      // eslint-disable-next-line no-console\n      console.error(\"Error initializing chat:\", error);\n      chatContainer.innerHTML = \"Failed to load chat. Please try again later.\";\n  }\n}\n"],"names":["initIagoraChat","copilotUrl","chatId","tokenEndpointURL","URL","locale","document","documentElement","lang","apiVersion","searchParams","get","directLineURL","token","Promise","all","fetch","then","response","ok","Error","json","_ref2","channelUrlsById","directline","_ref3","console","log","WebChat","directLine","createDirectLine","domain","subscription","connectionStatus$","subscribe","next","value","postActivity","localTimezone","Intl","DateTimeFormat","resolvedOptions","timeZone","name","type","unsubscribe","chatContainer","getElementById","renderWebChat","error","innerHTML","_ref"],"mappings":"6pCAqBsBA,eAAeC,WAAYC,kBAEvCC,iBAAmB,IAAIC,IAAIH,YAC3BI,OAASC,SAASC,gBAAgBC,MAAQ,KAC1CC,WAAaN,iBAAiBO,aAAaC,IAAI,gBAC9CC,cAAeC,aAAeC,QAAQC,IAAI,CAC/CC,MAAM,IAAIZ,sEAA+DK,YAAcN,mBACpFc,MAAKC,eACCA,SAASC,SACN,IAAIC,MAAM,wDAGXF,SAASG,UAEjBJ,MAAKK,YAAGC,iBAAiBC,WAAEA,0BAAmBA,cACjDR,MAAMb,kBACHc,MAAKC,eACCA,SAASC,SACN,IAAIC,MAAM,gDAGXF,SAASG,UAEjBJ,MAAKQ,YAACZ,MAAEA,oBAAYA,WAIzBa,QAAQC,IAAI,UAAWC,eAGjBC,WAAaD,QAAQE,iBAAiB,CAAEC,OAAQ,IAAI3B,IAAI,gBAAiBQ,eAAgBC,MAAAA,QACzFmB,aAAeH,WAAWI,kBAAkBC,UAAU,CAC1DC,KAAKC,OACW,IAAVA,QACFP,WACGQ,aAAa,CACVC,cAAeC,KAAKC,iBAAiBC,kBAAkBC,SACvDrC,OAAAA,OACAsC,KAAM,oBACNC,KAAM,UAETV,YAEHF,aAAaa,kBAKbC,cAAgBxC,SAASyC,eAAe7C,QAC9C0B,QAAQoB,cACN,CAACnB,WAAAA,WAAYxB,OAAQC,SAASC,gBAAgBC,MAAQ,MACtDsC,eAEF,MAAOG,OAELvB,QAAQuB,MAAM,2BAA4BA,OAC1CH,cAAcI,UAAY,8DArEZC,WAAClD,WAACA,WAADC,OAAaA,aAEhCwB,QAAQC,IAAI,eAAgB1B,YAE5ByB,QAAQC,IAAI,WAAYzB,QACxBF,eAAeC,WAAYC"}